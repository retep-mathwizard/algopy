#!/usr/bin/env python3
import numpy as np
def non_lin(value, deriv_of_sigmoid=False):
    if deriv_of_sigmoid:
        return x * (1 - value)
    else:
        #find spot on sigmoid function https://en.wikipedia.org/wiki/Sigmoid_function
        #converts any value between 0 & 1, is our probability
        return 1/(1+np.exp(-value))

input_x = np.array([[0,0,1],
                        [0,1,1],
                        [1,0,1],
                        [1,1,1]])
output_y = np.array([[0],[0],[1],[1]] #np.array([[0,0,1,1]]).T is the same thing (transpose)
np.random.seed(1) #makes sure that the random numbers predictable. Otherwise different numbers appear every random call.
#layer 0 > synapse > layer 1(hidden)
#https://iamtrask.github.io/2015/07/12/basic-python-network/
syn0 = 2*np.random.random((3,1)) - 1 #the argument (3,1) makes 3 random numbers in 1 nested list https://repl.it/FRyE/
